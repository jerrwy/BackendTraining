// Generated by CoffeeScript 1.12.7
var connections, count, net, port, responseData, server

net = require("net")

responseData = [0, 1, 2, 3].map(()=>"0123456789").join("")

connections = {}

count = 0

server = net.createServer((c)=>{
  c.id = count++
  connections[c.id] = true
  c.on("end", ()=>{
    if (connections[c.id]) delete connections[c.id]

    console.log("connection end" + c.id)
  })

  c.on("error", (err)=>{
    if (connections[c.id]) delete connections[c.id]
    console.log(err, c.id)

  })

  c.on("data", (chunk)=>{
    var handletype, type
    var type = chunk.toString("utf8", 0, 2)
    switch (type) {
      case "HB":
        console.log(type, c.id)
        return

      case "RQ":
        console.log(type, c.id, chunk.toString("utf8"))
        setTimeout(()=>{
          c.write(chunk + responseData)
        }, Math.random() * 100)
        return
    }
  })
})

port = process.env.port || 8124

server.listen(port, ()=>{
  console.log("server bound")
  process.stdin.resume()
})

setInterval(()=>{
  console.log("count:" + (Object.keys(connections).length) + ", \ntime:" + (new Date()))
}, 2000)
